/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfazarq;

import ObjetoNegocio.Apuesta;
import ObjetoNegocio.Casilla;
import ObjetoNegocio.Cañas;
import ObjetoNegocio.Ficha;
import ObjetoNegocio.Jugador;
import ObjetoNegocio.Partida;
import ObjetoNegocio.Tablero;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author Manuel
 */
public class Frm_Configuracion extends javax.swing.JFrame {

    /**
     * Creates new form Configuracion
     */
    int Confirmacion = 0;

    /**
     * Método constructor de clase Frm_Configuración
     */
    public Frm_Configuracion() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtMontoFondo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnIniciarJuego = new javax.swing.JButton();
        btnValidarConfiguracion = new javax.swing.JButton();
        Cbb_NumJugadores = new javax.swing.JComboBox<Object>();
        Cbb_numCasillas = new javax.swing.JComboBox<Object>();
        Cbb_numFichas = new javax.swing.JComboBox<Object>();
        jLabel6 = new javax.swing.JLabel();
        Cbb_OrdenJugadores = new javax.swing.JComboBox();
        btn_Atras = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Configurar Tablero");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(53, 43, 49));

        txtMontoFondo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMontoFondoActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Configuración de partida");

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Seleccionar número de jugadores:");

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Seleccionar monto del fondo:");

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Seleccionar número de casillas:");

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Elegir número de fichas:");

        btnIniciarJuego.setText("Iniciar juego");
        btnIniciarJuego.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarJuegoActionPerformed(evt);
            }
        });

        btnValidarConfiguracion.setText("Validar Configuración");
        btnValidarConfiguracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValidarConfiguracionActionPerformed(evt);
            }
        });

        Cbb_NumJugadores.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2", "3", "4" }));

        Cbb_numCasillas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "8", "9", "10", "11", "12", "13", "14" }));

        Cbb_numFichas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2", "3", "4", "5", "6" }));
        Cbb_numFichas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cbb_numFichasActionPerformed(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Seleccionar Orden Jugadores:");

        Cbb_OrdenJugadores.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Orden por entrada", "Orden Inverso" }));

        btn_Atras.setText("Atras");
        btn_Atras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AtrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(204, 204, 204)
                            .addComponent(jLabel1))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(250, 250, 250)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnValidarConfiguracion)
                                .addComponent(jLabel3)))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMontoFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Cbb_NumJugadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Cbb_numCasillas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Cbb_numFichas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Cbb_OrdenJugadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(155, 155, 155))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_Atras)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnIniciarJuego)
                        .addGap(253, 253, 253))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(Cbb_NumJugadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMontoFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Cbb_numCasillas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Cbb_numFichas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(Cbb_OrdenJugadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(btnValidarConfiguracion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIniciarJuego)
                    .addComponent(btn_Atras))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMontoFondoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMontoFondoActionPerformed
        // TODO add


    }//GEN-LAST:event_txtMontoFondoActionPerformed

    private void btnIniciarJuegoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarJuegoActionPerformed
        IniciarJuego();

    }//GEN-LAST:event_btnIniciarJuegoActionPerformed

    private void btnValidarConfiguracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValidarConfiguracionActionPerformed
        this.ValidarMonto();
    }//GEN-LAST:event_btnValidarConfiguracionActionPerformed

    private void Cbb_numFichasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cbb_numFichasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Cbb_numFichasActionPerformed

    private void btn_AtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AtrasActionPerformed
        new Frm_MenuPrincipal().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_AtrasActionPerformed

    /**
     * Método boolean para validar monto
     *
     * @return boolean
     */
    public boolean ValidarMonto() {
        try {
            if (esNumero(txtMontoFondo.getText().trim())) {

                float Maximo = 10000000;

                float monto = Float.parseFloat(txtMontoFondo.getText());
                if (monto > 0 || monto >= Maximo) {

                    this.Confirmacion = 1;
                    JOptionPane.showMessageDialog(null, "Se han validado los datos correctamente");

                    return true;
                }

            } else {
                JOptionPane.showMessageDialog(null, "Solo se aceptan numeros");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "LLene correctamente los datos SOLO NUMEROS");
            return false;
        }
        return false;

    }

    /**
     * Método para resetear monto
     */
    public void vaciar() {
        this.txtMontoFondo.setText("");
    }

    /**
     * Método estático para validar si cadena de texto es número.
     *
     * @param numero
     * @return
     */
    public static boolean esNumero(String numero) {
        return numero.matches("[0-9]*");
    }

    /**
     * Método para que regresa una partida creada en base a los campos de texto de configuración.
     * @return Partida
     */
    public Partida RecopilarTextos() {
        int numJugadores = Integer.parseInt((String) Cbb_NumJugadores.getSelectedItem());
        int montoFondo = Integer.parseInt(txtMontoFondo.getText());
        int numCasillas = Integer.parseInt((String) Cbb_numCasillas.getSelectedItem());
        int numFichas = Integer.parseInt((String) Cbb_numFichas.getSelectedItem());
        String Orden = (String) Cbb_OrdenJugadores.getSelectedItem();

        Apuesta a = new Apuesta();
        Tablero t = new Tablero(this.llenarCasillas(numCasillas * 2 * 4 + 4, numFichas));
        Jugador[] j = this.llenarJugadores(numJugadores, a);
        for (Jugador j1 : j) {
            j1.setFichas(this.llenarFichas(numFichas, j1));
        }
        return new Partida(numCasillas, t, j, this.llenarCañas(), gen());

    }
    
    /**
     * Método generador random que regresa un int
     * @return int
     */
    public int gen() {
        Random r = new Random(System.currentTimeMillis());
        return ((1 + r.nextInt(2)) * 10000 + r.nextInt(10000));
    }
    
    /**
     * Método void para iniciar juego
     */
    public void IniciarJuego() {

        try {
            if (Confirmacion == 0) {
                JOptionPane.showMessageDialog(null, "Es necesario que se validen los datos");
                return;
            }

            Frm_Juego juego = new Frm_Juego();
            Frm_MenuPrincipal.evento.register(juego);
            Frm_MenuPrincipal.evento.post(this.RecopilarTextos());
            juego.setVisible(true);
            this.setVisible(false);
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "Dato Erroneo");
        }
    }
    
    /**
     * Método que regresa una lista con cañas.
     * @return Cañas[]
     */
    public Cañas[] llenarCañas() {
        Cañas[] cañas = new Cañas[5];
        for (int i = 0; i < 5; i++) {
            Cañas c = new Cañas();
            cañas[i] = c;

        }
        return cañas;
    }
    
    /**
     * Método que regresa una lista con todos los jugadores de la partida
     * @param numJugadores
     * @param apuesta
     * @return Jugador[]
     */
    public Jugador[] llenarJugadores(int numJugadores, Apuesta apuesta) {
        Jugador[] jugadores = new Jugador[numJugadores];

        for (int i = 1; i < numJugadores + 1; i++) {

            jugadores[i - 1] = new Jugador(apuesta);

        }
        return jugadores;
    }
    
    /**
     * Método que genera y regresa una lista con las casillas de la partida
     * @param numCasillas
     * @param numFichas
     * @return Casilla[] 
     */
    public Casilla[] llenarCasillas(int numCasillas, int numFichas) {
        Casilla[] casillas = new Casilla[numCasillas];
        for (int i = 1; i < numCasillas; i++) {
            casillas[i - 1] = new Casilla(i, new Ficha[numFichas]);

        }
        return casillas;
    }
    
    /**
     * Método que genera y regresa lista con las fichas de la partida.
     * @param numFichas
     * @param jugador
     * @return Ficha[]
     */
    public Ficha[] llenarFichas(int numFichas, Jugador jugador) {

        Ficha[] fichas = new Ficha[numFichas];
        for (int i = 1; i < numFichas + 1; i++) {
            fichas[i - 1] = new Ficha(i - 1, -1);
        }
        return fichas;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Object> Cbb_NumJugadores;
    private javax.swing.JComboBox Cbb_OrdenJugadores;
    private javax.swing.JComboBox<Object> Cbb_numCasillas;
    private javax.swing.JComboBox<Object> Cbb_numFichas;
    private javax.swing.JButton btnIniciarJuego;
    private javax.swing.JButton btnValidarConfiguracion;
    private javax.swing.JButton btn_Atras;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtMontoFondo;
    // End of variables declaration//GEN-END:variables
}
